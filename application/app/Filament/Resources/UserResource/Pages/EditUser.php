<?php

namespace App\Filament\Resources\UserResource\Pages;

use App\Filament\Resources\UserResource;
use App\Filament\Widgets\amoCRMButton;
use App\Models\amoCRM\Staff;
use App\Models\amoCRM\Status;
use App\Models\User;
use App\Services\amoCRM\Client;
use Filament\Forms\Concerns\InteractsWithForms;
use Filament\Forms\Contracts\HasForms;
use Filament\Pages\Actions;
use Filament\Resources\Pages\EditRecord;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;

class EditUser extends EditRecord
{
    protected static string $resource = UserResource::class;

    protected function getActions(): array
    {
        return [
            Actions\Action::make('amocrm_update')
                ->label('Синхронизировать amoCRM')
                ->action('amocrmUpdate'),
        ];
    }

    protected function getHeaderWidgets(): array
    {
        return [
            amoCRMButton::class,
        ];
    }

    protected function getHeaderWidgetsColumns(): int|array
    {
        return 3; // TODO: Change the autogenerated stub
    }

    /**
     * @throws \Exception
     */
    public function amocrmUpdate(): void
    {
        $amoApi = (new Client(Auth::user()->account))->init();

        $users = $amoApi->service->account->users;

        Auth::user()->amocrm_staffs()->delete();

        foreach ($users as $user) {

            Staff::query()->create([
                'user_id'  => Auth::user()->id,
                'name'     => $user->name,
                'staff_id' => $user->id,
                'group'    => $user->group->id,
            ]);
        }

        $pipelines = $amoApi->service->account->pipelines;

        Auth::user()->amocrm_statuses()->delete();

        foreach ($pipelines->toArray() as $pipeline) {

            foreach ($pipeline['statuses']->toArray() as $status) {

                Status::query()->create([
                    'user_id'      => Auth::user()->id,
                    'name'         => $status['name'],
                    'status_id'    => $status['id'],
                    'color'        => $status['color'],
                    'pipeline_id'  => $pipeline['id'],
                    'pipeline_name'=> $pipeline['name'],
                ]);
            }
        }
    }
}
