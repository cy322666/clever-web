<?php

namespace App\Filament\Resources\Core\UserResource\Pages;

use App\Filament\Resources\Core\UserResource;
use App\Services\amoCRM\Client;
use App\Services\amoCRM\Models\Account;
use Filament\Notifications\Notification;
use Filament\Pages\Actions;
use Filament\Resources\Pages\ViewRecord;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Redirect;

class ViewUser extends ViewRecord
{
    protected static string $resource = UserResource::class;

    protected static ?string $title = 'Аккаунт';

    protected function getActions(): array
    {
        return [
            Actions\Action::make('amocrmUpdate')
                ->label('Синхронизировать amoCRM')
                ->action('amocrmUpdate'),
        ];
    }

    protected function getHeaderWidgets(): array
    {
        return [];
    }

    public function getHeaderWidgetsColumns(): int|array
    {
        return 3; // TODO: Change the autogenerated stub
    }

    /**
     * @throws \Exception
     */
    public function amocrmUpdate(): void
    {
        $account = Auth::user()->account;

        if (!$account->auth) {

            Redirect::to('https://www.amocrm.ru/oauth/?state='.Auth::user()->uuid.'&mode=popup&client_id='.config('services.amocrm.client_id'));

            $account->active = true;
            $account->save();

        }

        try {
            $amoApi = (new Client(Auth::user()->account))->init();

            if ($account->active && $amoApi->auth) {

                Account::users($amoApi);
                Account::statuses($amoApi);

                Notification::make()
                    ->title('Успешно обновлено')
                    ->success()
                    ->send();
            } else
                Notification::make()
                    ->title('Ошибка обновления. Попробуйте снова')
                    ->warning()
                    ->send();

        } catch (\Throwable $e) {

            Log::error(__METHOD__, [$e->getMessage()]);

            Notification::make()
                ->title('Критическая ошибка обновления. Обратитесь в тех поддержку')
                ->danger()
                ->send();
        }
    }
}
