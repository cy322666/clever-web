<?php

namespace App\Filament\Resources\Core\UserResource\Pages;

use App\Filament\Resources\Core\UserResource;
use App\Filament\Widgets\amoCRMButton;
use App\Models\amoCRM\Staff;
use App\Models\amoCRM\Status;
use App\Models\User;
use App\Services\amoCRM\Client;
use App\Services\amoCRM\Models\Account;
use Filament\Forms\Concerns\InteractsWithForms;
use Filament\Forms\Contracts\HasForms;
use Filament\Notifications\Notification;
use Filament\Pages\Actions;
use Filament\Resources\Pages\EditRecord;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;

class EditUser extends EditRecord
{
    protected static string $resource = UserResource::class;

    protected function getActions(): array
    {
        return [
            Actions\Action::make('amocrmUpdate')
                ->label('Синхронизировать amoCRM')
                ->action('amocrmUpdate'),
        ];
    }

    protected function getHeaderWidgets(): array
    {
        return [
            amoCRMButton::class,
        ];
    }

    public function getHeaderWidgetsColumns(): int|array
    {
        return 3; // TODO: Change the autogenerated stub
    }

    /**
     * @throws \Exception
     */
    public function amocrmUpdate(): void
    {
        $amoApi = (new Client(Auth::user()->account))->init();

        if ($amoApi->auth !== false) {

            Account::users($amoApi);
            Account::statuses($amoApi);

            Notification::make()
                ->title('Успешно')
                ->success()
                ->send();

        } else
            Notification::make()
                ->title('Авторизуйся')
                ->warning()
                ->send();
    }
}
